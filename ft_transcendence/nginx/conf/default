server {
    listen 80;
    server_name pandapong.ninja www.pandapong.ninja;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    http2  on;
    server_name pandapong.ninja www.pandapong.ninja;

    ssl_certificate /etc/ssl/certs/pandapong.pem;
    ssl_certificate_key /etc/ssl/private/pandapong.key;
    
    # Renforcer la sécurité SSL
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256";
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000" always;

    # Configuration pour le Backend
    location / {
        proxy_pass http://project:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-SSL on;
        proxy_set_header X-Forwarded-Port 443;
        
        # Spécifique pour WebSocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
    }

    # Serveur les fichiers statiques directement sans passer par Django
    location /static/ {
        alias /project/staticfiles/;
    }

    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
}


