{"version":3,"sources":["webpack:///webpack/bootstrap 6e12aa80e4492969d32c","webpack:///./lib/space_invaders.js","webpack:///./lib/game_view.js","webpack:///./lib/game.js","webpack:///./lib/ship.js","webpack:///./lib/moving_object.js","webpack:///./lib/util.js","webpack:///./lib/bullet.js","webpack:///./lib/star.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAC;;;;;;;ACZD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAuB,wBAAwB,EAAE;AACjD,IAAG;;AAEH,4BAA2B,uBAAuB,EAAE;AACpD;;AAEA;;;;;;;AC9CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA,kBAAiB,iCAAiC;AAClD,oBAAmB,iCAAiC;AACpD;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACpLA;AACA;AACA;;AAEA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACzGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAsC,cAAc;;AAEpD;AACA;AACA;AACA;;AAEA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;AClCA;AACA;;AAEA,qCAAoC;AACpC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACnCA;AACA;;AAEA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6e12aa80e4492969d32c","const GameView = require('./game_view');\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const canvas = document.getElementById('game-canvas');\n  canvas.height = 600;\n  canvas.width = 900;\n\n  const canvasSize = [canvas.width, canvas.height];\n  const ctx = canvas.getContext('2d');\n  const gameView = new GameView(ctx, canvasSize);\n\n  gameView.start();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/space_invaders.js\n// module id = 0\n// module chunks = 0","// Responsible for keeping track of canvas context, the game and the ships\n// Will be in charge of setting an interval timer to animate the game.\n// Will bind key listeners to the ship so that user may move it around.\n\nconst Game = require('./game');\n\nconst GameView = function(ctx, canvasSize) {\n  this.ctx = ctx;\n  this.canvasSize = canvasSize;\n  this.game = new Game(this.canvasSize);\n  this.defender = this.game.defender;\n};\n\nGameView.prototype.start = function() {\n  this.bindKeyHandlers();\n  setInterval(() => {\n    this.game.draw(this.ctx);\n    this.game.step();\n  }, 10);\n};\n\nGameView.KEY_BINDS = {\n  'w': [0, -3],\n  ',': [0, -3],\n  'a': [-3, 0],\n  's': [0, 3],\n  'o': [0, 3],\n  'd': [3, 0],\n  'e': [3, 0],\n  'up': [0, -3],\n  'down': [0, 3],\n  'left': [-3, 0],\n  'right': [3, 0]\n};\n\nGameView.prototype.bindKeyHandlers = function() {\n  const defender = this.defender;\n\n  Object.keys(GameView.KEY_BINDS).forEach(k => {\n    let offset = GameView.KEY_BINDS[k];\n    key(k, function() { defender.power(offset); });\n  });\n\n  key('space', function() { defender.fireBullet(); })\n};\n\nmodule.exports = GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_view.js\n// module id = 1\n// module chunks = 0","const Ship = require(\"./ship\");\nconst Bullet = require('./bullet');\nconst Star = require(\"./star\");\nconst Util = require(\"./util\");\n\nconst Game = function(canvasSize) {\n  this.canvasSize = canvasSize;\n  this.defender = null;\n  this.stars = [];\n  this.bullets = [];\n  this.invaderShips = [];\n  this.shields = [];\n\n  this.DIM_X = canvasSize[0];\n  this.DIM_Y = canvasSize[1];\n\n  this.addStars();\n  this.addDefenderShip();\n  this.addInvaderShips();\n  this.allObjects = this.getAllObjects();\n};\n\nGame.BG_COLOR = \"#000000\";\nGame.NUM_STARS = 40;\n\nGame.prototype.randomPosition = function() {\n  return [\n    this.DIM_X * Math.random(),\n    this.DIM_Y * Math.random()\n  ];\n};\n\nGame.prototype.addStars = function() {\n  for (let i = 0; i < Game.NUM_STARS; i++) {\n    this.stars.push(new Star({\n      id: i,\n      color: \"#ffffff\",\n      pos: this.randomPosition(),\n      vel: Util.randomVec(10),\n      game: this\n    }));\n  }\n};\n\nGame.prototype.addInvaderShips = function () {\n  let invaderShipName;\n  let invaderShipImage;\n  let y = 80;\n\n  for (let row = 0; row < 5; row++) {\n    if (row < 1) {\n      invaderShipName = 'invader';\n      invaderShipImage = document.getElementById('invader-1');\n    } else if (row < 3) {\n      invaderShipName = 'soldier';\n      invaderShipImage = document.getElementById('soldier-1');\n    } else if (row > 2) {\n      invaderShipName = 'grunt';\n      invaderShipImage = document.getElementById('grunt-1');\n    }\n\n    for (let x = 1; x < 12; x++) {\n      let invaderShip = new Ship ({\n        name: invaderShipName,\n        game: this,\n        canvasSize: this.canvasSize,\n        img: invaderShipImage,\n        pos: [\n          x * 50,\n          y\n        ],\n        vel: [0.5, 0],\n        radius: 9\n      });\n\n      this.invaderShips.push(invaderShip);\n    }\n\n    y += 40;\n  }\n\n};\n\nGame.prototype.wrap = function(pos) {\n  let x = pos[0], y = pos[1];\n  let maxX = this.DIM_X, maxY = this.DIM_Y;\n\n  let wrappedX = Util.wrap(x, maxX);\n  let wrappedY = Util.wrap(y, maxY);\n\n  return [wrappedX, wrappedY];\n};\n\nGame.prototype.addDefenderShip = function() {\n  const defender = new Ship ({\n    name: 'defender',\n    game: this,\n    canvasSize: this.canvasSize,\n    img: document.getElementById('defender'),\n    pos: [\n      (this.canvasSize[0] - 30) / 2,\n      this.canvasSize[1] - 70\n    ],\n    vel: [0, 0],\n    radius: 9\n  });\n\n  this.defender = defender;\n};\n\nGame.prototype.getAllObjects = function() {\n  return [].concat(\n    this.invaderShips,\n    this.bullets,\n    this.shields,\n    this.stars\n  );\n};\n\nGame.prototype.moveObjects = function() {\n  this.getAllObjects().forEach(object => {\n    object.move();\n  });\n};\n\nGame.prototype.reverseAllInvaders = function() {\n  this.invaderShips.forEach(invader => {\n    invader.reverse();\n  });\n};\n\nGame.prototype.draw = function(ctx) {\n  ctx.clearRect(0, 0, this.DIM_X, this.DIM_Y);\n  ctx.fillStyle = Game.BG_COLOR;\n  ctx.fillRect(0, 0, this.DIM_X, this.DIM_Y);\n\n  this.defender.draw(ctx);\n\n  this.getAllObjects().forEach(object => {\n    object.draw(ctx);\n  });\n\n};\n\nGame.prototype.checkCollisions = function() {\n  for (var i = 0; i < this.getAllObjects().length; i++) {\n    for (var j = 0; j < this.getAllObjects().length; j++) {\n      let object1 = this.getAllObjects()[i];\n      let object2 = this.getAllObjects()[j];\n\n      if (object1 instanceof Star || object2 instanceof Star) {\n        return;\n      }\n\n      if (object1 instanceof Bullet || object2 instanceof Bullet) {\n\n      }\n\n      if (object1.isCollidedWith(object2)) {\n        console.log('collision');\n\n        const collision = object1.collideWith(object2);\n        if (collision) {\n          alert('collide');\n        }\n      }\n    }\n  }\n};\n\nGame.prototype.remove = function(object) {\n  let index = this.allObjects.indexOf(object);\n  this.allObjects.splice(index, 1);\n};\n\nGame.prototype.step = function() {\n  this.moveObjects();\n  this.checkCollisions();\n};\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 2\n// module chunks = 0","const MovingObject = require(\"./moving_object\");\nconst Util = require(\"./util\");\nconst Bullet = require('./bullet');\n\nconst Ship = function(options = {}) {\n  this.name = options.name;\n  this.game = options.game;\n  this.canvasSize = options.canvasSize;\n  this.img = options.img;\n  this.pos = options.pos;\n  this.vel = options.vel;\n  this.radius = options.radius;\n\n  MovingObject.call(this, options);\n};\n\nUtil.inherits(Ship, MovingObject);\n\nShip.prototype.draw = function(ctx) {\n  let x = this.pos[0];\n  let y = this.pos[1];\n  ctx.drawImage(this.img, x, y, 45, 35);\n};\n\nShip.prototype.respawn = function() {\n  this.pos = [\n    (this.canvasSize[0] - 30) / 2,\n     this.canvasSize[1] - 40\n  ];\n  this.vel = [0,0];\n};\n\nShip.prototype.death = function() {\n  if (this.name === 'defender') {\n    this.respawn();\n  } else {\n    // remove ship from game\n\n  }\n};\n\nShip.prototype.collideWith = function(otherObject) {\n  if (otherObject instanceof Bullet) {\n    this.death();\n  }\n};\n\nShip.prototype.fireBullet = function() {\n  console.log('you shot me!');\n\n  let bulletPosX = this.pos[0] + 22.5;\n  let bulletPosY = this.pos[1];\n  let bulletPos = [bulletPosX, bulletPosY];\n\n  let bullet = new Bullet({\n    vel: [0, -2],\n    pos: bulletPos,\n    color: \"#FF0000\",\n    game: this.game,\n    radius: 2\n  });\n\n  this.game.bullets.push(bullet);\n};\n\nShip.prototype.reverse = function() {\n  let newVel = Math.abs(this.vel[0]) + 0.1;\n  if (this.vel[0] > 0) {\n    newVel = 0 - newVel;\n    this.vel = [newVel, 0];\n    this.pos[0] -= 5;\n  } else {\n    this.vel = [newVel, 0];\n    this.pos[0] += 5;\n  }\n  this.pos[1] += 40;\n};\n\nShip.prototype.move = function() {\n  if (this.pos[0] > this.canvasSize[0] - 60) {\n    this.game.reverseAllInvaders();\n    } else if (this.pos[0] < 20) {\n    this.game.reverseAllInvaders();\n  } else {\n    this.pos[0] += this.vel[0];\n    this.pos[1] += this.vel[1];\n  }\n};\n\nShip.prototype.power = function(impulse) {\n\n  if (this.pos[0] > this.canvasSize[0] - 60) {\n    if (impulse[0] > 0) {\n      return;\n    }\n  } else if (this.pos[0] < 20) {\n    if (impulse[0] < 0) {\n      return;\n    }\n  }\n\n  let xOffset = impulse[0];\n  this.pos[0] += xOffset * 10;\n};\n\nmodule.exports = Ship;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/ship.js\n// module id = 3\n// module chunks = 0","const Util = require('./util');\nconst Ship = require('./ship');\n\nconst MovingObject = function(options) {\n  this.color = options.color;\n  this.pos = options.pos;\n  this.vel = options.vel;\n  this.img = options.img;\n  this.game = options.game;\n  this.canvasSize = options.canvasSize;\n};\n\nMovingObject.prototype.draw = function(ctx) {\n  let x = this.pos[0];\n  let y = this.pos[1];\n\n  ctx.drawImage(this.img, x, y, 50, 30);\n};\n\nMovingObject.prototype.move = function() {\n  this.pos[0] += this.vel[0];\n  this.pos[1] += this.vel[1];\n};\n\nMovingObject.prototype.collideWith = function(otherObject) {\n  this.game.remove(this);\n  this.game.remove(otherObject);\n};\n\nMovingObject.prototype.isCollidedWith = function(otherObject) {\n  // debugger;\n  // if (this.id === otherObject.id) { return false; }\n\n  let radiusSum = this.radius + otherObject.radius;\n  const centerDiff = Util.dist(this.pos, otherObject.pos);\n  return centerDiff < radiusSum;\n};\n\nmodule.exports = MovingObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/moving_object.js\n// module id = 4\n// module chunks = 0","const Util = {\n  inherits(child, parent) {\n    function Surrogate() {}\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate();\n    child.prototype.constructor = child;\n  },\n\n  randomVec(length) {\n    let deg = 2 * Math.PI * Math.random();\n    return Util.scale([Math.sin(deg), Math.cos(deg)], length);\n  },\n\n  scale(vec, m) {\n    return [vec[0] * m, vec[1] * m];\n  },\n\n  dist(pos1, pos2) {\n    return Math.sqrt(\n      Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n    );\n  },\n\n  wrap(coord, max) {\n    if (coord < 0) {\n      return max - (coord % max);\n    } else if (coord > max) {\n      return coord % max;\n    } else {\n      return coord;\n    }\n  }\n};\n\nmodule.exports = Util;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util.js\n// module id = 5\n// module chunks = 0","const Util = require('./util');\nconst MovingObject = require('./moving_object');\n\nconst Bullet = function(options = {}) {\n  this.vel = options.vel;\n  this.pos = options.pos;\n  this.color = options.color;\n  this.radius = options.radius;\n\n  MovingObject.call(this, options);\n};\n\nUtil.inherits(Bullet, MovingObject);\n\nBullet.prototype.draw = function(ctx) {\n  ctx.strokeStyle = \"#FF0000\";\n  ctx.fillStyle = \"#FF0000\";\n\n  ctx.fillRect(\n    this.pos[0],\n    this.pos[1],\n    2,\n    7\n  );\n\n  // ctx.fillRect();\n\n  // ctx.beginPath();\n  // ctx.moveTo(this.pos[0], this.pos[1]);\n  // ctx.lineTo((this.pos[0] + 2), (this.pos[1] - 5));\n  //\n  // ctx.stroke();\n  // ctx.fill();\n};\n\nmodule.exports = Bullet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/bullet.js\n// module id = 6\n// module chunks = 0","const Util = require('./util');\nconst MovingObject = require('./moving_object');\n\nconst Star = function(options = {}) {\n  this.id = options.id;\n  this.color = \"#ffffff\";\n  this.radius = Math.random() * 1.5;\n  this.pos = options.pos || options.game.randomPosition();\n  this.vel = options.vel || Util.randomVec(50);\n  this.game = options.game;\n\n  MovingObject.call(this, options);\n};\n\nUtil.inherits(Star, MovingObject);\n\nStar.prototype.move = function() {\n  this.pos[0] += this.vel[0];\n  this.pos[1] += this.vel[1];\n\n  this.pos = this.game.wrap(this.pos);\n};\n\nStar.prototype.draw = function(ctx) {\n  ctx.fillStyle = this.color;\n  ctx.beginPath();\n  ctx.arc(\n    this.pos[0],\n    this.pos[1],\n    this.radius,\n    0,\n    2 * Math.PI,\n    true\n  );\n  ctx.fill();\n};\n\nmodule.exports = Star;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/star.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}